@import "../../../../variables.scss";

$anims: float, floatReverse, float2, floatReverse2;
$easeSmooth: cubic-bezier(0.39, 0.575, 0.28, 0.995);
$color: #595959;

.container {
    @include flex(column, center, center);
    padding: 3.35rem;
    position: relative;
    background: $background-color;
    color: #000;
    overflow: hidden;
    box-shadow: $primary-box-shadow;
}

.content {
    position: relative;
    width: 600px;
    max-width: 100%;
    background: transparent;
    padding: 6.25rem;
    text-align: center;
    box-shadow: $primary-box-shadow;
    opacity: 0;
    animation: apparition 0.8s 1.2s $easeSmooth forwards;
    border-radius: 5px;

    p {
        font-size: 1.3rem;
        margin-top: 0;
        margin-bottom: 0.6rem;
        letter-spacing: 0.1rem;
        color: $color;
        font-weight: 900;

        &:last-child {
            margin-bottom: 0;
        }
    }

    &__404 {
        color: $primary-color;
    }

    &__button {
        display: inline-block;
        margin-top: 2rem;
        padding: 0.5rem 1rem;
        border: 3px solid $primary-color;
        background: transparent;
        font-size: 1rem;
        color: $color;
        text-decoration: none;
        cursor: pointer;
        font-weight: bold;
        border-radius: 5px;
        transition: all 0.3s ease-in-out;

        &:hover {
            background: $primary-color;
            color: $white-color;
        }
    }
}

.four {
    color: $primary-color;
}

.zero {
    color: $secondary-color;
}

.particle {
    position: absolute;
    display: block;
    pointer-events: none;

    @for $i from 1 through 80 {
        &:nth-child(#{$i}) {
            $size: calc(random(20)) + 10;
            $blur: $i * 0.02;
            $speed: calc(random(20))+10;
            $delay: calc(random(10)*0.1);
            $anim: nth($anims, calc(random(length($anims))));

            top: calc(random(100) / (100 + $size/8)) * 100%;
            left: calc(random(100) / (100 + $size/10)) * 100%;
            font-size: $size + px;
            filter: blur((#{$blur}) + px);
            animation: $speed+s $anim infinite;
        }
    }
}

@keyframes apparition {
    from {
        opacity: 0;
        transform: translateY(100px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes float {

    0%,
    100% {
        transform: translateY(0);
    }

    50% {
        transform: translateY(180px);
    }
}

@keyframes floatReverse {

    0%,
    100% {
        transform: translateY(0);
    }

    50% {
        transform: translateY(-180px);
    }
}

@keyframes float2 {

    0%,
    100% {
        transform: translateY(0);
    }

    50% {
        transform: translateY(28px);
    }
}

@keyframes floatReverse2 {

    0%,
    100% {
        transform: translateY(0);
    }

    50% {
        transform: translateY(-28px);
    }
}

@mixin animation ($delay, $duration, $animation) {
    animation-delay: $delay;
    animation-duration: $duration;
    animation-name: $animation;
    animation-iteration-count: infinite;
    animation-fill-mode: forwards;
}